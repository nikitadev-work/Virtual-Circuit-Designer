stages:
  - build
  - deploy

variables:
  IMAGE_PREFIX: nikitakhripunkov

.build-with-kaniko:
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  before_script:
    - |
      mkdir -p /kaniko/.docker
      printf '{"auths":{"https://index.docker.io/v1/":{"username":"%s","password":"%s"}}}\n' \
        "$DOCKERHUB_USER" "$DOCKERHUB_TOKEN" > /kaniko/.docker/config.json
  script:
    - |
      /kaniko/executor \
        --context $CI_PROJECT_DIR/$CONTEXT_DIR \
        --dockerfile $CI_PROJECT_DIR/$CONTEXT_DIR/Dockerfile \
        --destination $IMAGE_PREFIX/$IMAGE_NAME:latest \
        --digest-file /tmp/$IMAGE_NAME.digest \
        --single-snapshot \
        --skip-tls-verify

build_frontend:
  stage: build
  extends: .build-with-kaniko
  variables:
    CONTEXT_DIR: frontend
    IMAGE_NAME: frontend-vcd

build_api:
  stage: build
  extends: .build-with-kaniko
  variables:
    CONTEXT_DIR: backend/API_service
    IMAGE_NAME: backend-api-service

build_auth:
  stage: build
  extends: .build-with-kaniko
  variables:
    CONTEXT_DIR: backend/Authentication_service
    IMAGE_NAME: backend-auth-service

build_dbsvc:
  stage: build
  extends: .build-with-kaniko
  variables:
    CONTEXT_DIR: backend/Database_service
    IMAGE_NAME: backend-database-service

deploy_to_server:
  stage: deploy
  image: alpine:latest
  needs:
    - build_frontend
    - build_api
    - build_auth
    - build_dbsvc

  before_script:
    - apk add --no-cache openssh-client git
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
    - chmod 600 ~/.ssh/id_ed25519
    - echo -e "Host *\n\tStrictHostKeyChecking no" > ~/.ssh/config
  script: |
    ssh -i ~/.ssh/id_ed25519 root@85.198.81.168 <<'EOF'
      set -e
      cd visual-circuit-designer
      git fetch origin
      git reset --hard origin/main
      docker-compose pull
      docker-compose down --remove-orphans
      docker container prune -f
      docker-compose up -d --force-recreate
    EOF
  only:
    - main
