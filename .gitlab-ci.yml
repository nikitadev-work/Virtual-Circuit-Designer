stages:
  - build
  - test
  - deploy

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - frontend/node_modules/

variables:
  CI_REGISTRY: "registry.gitlab.pg.innopolis.university"
  PKG_REGISTRY: "${CI_REGISTRY}/team-45/visual-circuit-designer/packages/container"

build_and_push_images:
  stage: build
  image: docker:24.0.7
  services:
    - name: docker:24.0.7-dind
      alias: docker
  variables:
    DOCKER_TLS_CERTDIR: ""
    DOCKER_HOST: tcp://docker:2375
  privileged: true
  before_script:
    - apk add --no-cache nodejs npm
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
  script:
    - cd frontend
    - npm install --save-dev postcss autoprefixer tailwindcss
    - cd ..

    - docker build -t ${PKG_REGISTRY}/frontend-vcd:latest frontend/
    - docker build -t ${PKG_REGISTRY}/backend-api-service:latest backend/API_service/
    - docker build -t ${PKG_REGISTRY}/backend-auth-service:latest backend/Authentication_service/
    - docker build -t ${PKG_REGISTRY}/backend-database-service:latest backend/Database_service/

      # Pushing to Package Registry
    - docker push ${PKG_REGISTRY}/frontend-vcd:latest
    - docker push ${PKG_REGISTRY}/backend-api-service:latest
    - docker push ${PKG_REGISTRY}/backend-auth-service:latest
    - docker push ${PKG_REGISTRY}/backend-database-service:latest
  only:
    - main

deploy_to_server:
  stage: deploy
  image: alpine:24.0.7
  needs: ["build_and_push_images"]
  before_script:
    - apk update && apk add --no-cache openssh-client git
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
    - chmod 600 ~/.ssh/id_ed25519
    - echo -e "Host *\n\tStrictHostKeyChecking no" > ~/.ssh/config
    - ssh -i ~/.ssh/id_ed25519 root@85.198.81.168 "
      echo '$CI_JOB_TOKEN' | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
      "
  script:
    - ssh -vvv -i ~/.ssh/id_ed25519 root@85.198.81.168 "echo 'SSH connection test successful'"

    - ssh -i ~/.ssh/id_ed25519 root@85.198.81.168 "cd visual-circuit-designer &&
      git fetch origin &&
      git reset --hard origin/main &&
      docker-compose pull &&
      docker-compose down --remove-orphans &&
      docker container prune -f &&
      docker-compose up -d --force-recreate
      "
  only:
    - main
