stages:
  - build
  - deploy

# Общие переменные для всех jobs
variables:
  IMAGE_PREFIX: nikitakhripunkov               # чтобы не дублировать
  BUILDKITD_FLAGS: --oci-worker-no-process-sandbox  # рекомендует GitLab

# ---------- Шаблон rootless-BuildKit ----------
.build-with-buildkit:
  image:
    name: moby/buildkit:rootless               # BuildKit без root
    entrypoint: ["sh", "-euc"]                 # переопределяем, иначе запустится buildkitd
  before_script:
    # 1. Docker-config с логином в Hub
    - |
      mkdir -p ~/.docker
      echo "{
        \"auths\": {
          \"https://index.docker.io/v1/\": {
            \"username\": \"$DOCKERHUB_USER\",
            \"password\": \"$DOCKERHUB_TOKEN\"
          }
        }
      }" > ~/.docker/config.json
  script:
    # 2. Сам билд и push
    - |
      buildctl-daemonless.sh build \
        --frontend dockerfile.v0 \
        --local context=$CONTEXT_DIR \
        --local dockerfile=$CONTEXT_DIR \
        --output type=image,name=${IMAGE_PREFIX}/${IMAGE_NAME}:latest,push=true \
        --progress plain
# ---------------------------------------------

# ---------- Фронтенд ----------
build_frontend:
  stage: build
  extends: .build-with-buildkit
  variables:
    CONTEXT_DIR: frontend
    IMAGE_NAME: frontend-vcd

# ---------- API ----------
build_api:
  stage: build
  extends: .build-with-buildkit
  variables:
    CONTEXT_DIR: backend/API_service
    IMAGE_NAME: backend-api-service

# ---------- Auth ----------
build_auth:
  stage: build
  extends: .build-with-buildkit
  variables:
    CONTEXT_DIR: backend/Authentication_service
    IMAGE_NAME: backend-auth-service

# ---------- DB-service ----------
build_dbsvc:
  stage: build
  extends: .build-with-buildkit
  variables:
    CONTEXT_DIR: backend/Database_service
    IMAGE_NAME: backend-database-service

# ---------- Деплой (старый job почти без изменений) ----------
deploy_to_server:
  stage: deploy
  image: alpine:latest
  needs:
    - build_frontend
    - build_api
    - build_auth
    - build_dbsvc
  before_script:
    - apk add --no-cache openssh-client git
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
    - chmod 600 ~/.ssh/id_ed25519
    - echo -e "Host *\n\tStrictHostKeyChecking no" > ~/.ssh/config
  script: |
    ssh -i ~/.ssh/id_ed25519 root@85.198.81.168 <<'EOF'
      set -e
      cd visual-circuit-designer
      git fetch origin
      git reset --hard origin/main
      docker-compose pull
      docker-compose down --remove-orphans
      docker container prune -f
      docker-compose up -d --force-recreate
    EOF
  only:
    - main
