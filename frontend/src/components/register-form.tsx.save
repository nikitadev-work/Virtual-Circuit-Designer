import { useState } from "react";
import { cn } from "../lib/utils";
import { Button } from "./ui/button";
import Link from 'next/link';
import {
    Card,
    CardContent,
    CardDescription,
    CardHeader,
    CardTitle,
} from "./ui/card";
import { Input } from "./ui/input";
import { Label } from "./ui/label";

export function RegisterForm({ className, ...props }: React.ComponentProps<"div">) {
    const [email, setEmail] = useState("");
    const [password, setPassword] = useState("");
    const [error, setError] = useState("");
    const [name, setName] = useState("");

    const [confirmPassword, setConfirmPassword] = useState('');


    const passwordsMatch = password === confirmPassword;

    const validateEmail = (email: string) => {

        return /\S+@\S+\.\S+/.test(email);
    };

    const handleSubmit = async (e: React.FormEvent) => {
        e.preventDefault();
        setError("");
        console.log(name, email, password);

        if (!validateEmail(email)) {
            setError("Please, enter the correct email");
            return;
        }
        if (password.length < 6) {
            setError("Password should be longer, than 6 symbols");
            return;
        }
        if (!passwordsMatch) {
            setError("Passwords do not match");
            return;
        }

        try {
            const response = await fetch('http:
      default:
        aliases:
          - api-service:8080/user/register', {
                method: 'POST',
                headers: {
                    Accept: 'application/json',
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({name, email, password}),
            });

            if (!response.ok) {
                const data = await response.json();
                setError(data.message || "Registration failed");
                return;
            }

            window.location.href = '/login';


        } catch (error) {
            setError("Server error, please try again later")
        }
    };

    return (
        <div className={cn("flex flex-col gap-6", className)} {...props}>
            <Card>
                <CardHeader className="text-center">
                    <CardTitle className="text-xl">Register</CardTitle>
                    <CardDescription>Create an account</CardDescription>
                </CardHeader>
                <CardContent>
                    <form onSubmit={handleSubmit}>
                        <div className="grid gap-6">
                            <div className="grid gap-3">
                                <Label>Name</Label>
                                <Input
                                    id="name"
                                    type="text"
                                    placeholder="Ivan"
                                    required
                                    value={name}
                                    onChange={(e) => setName(e.target.value)}
                                />
                            </div>
                            <div className="grid gap-3">
                                <Label htmlFor="email">Email</Label>
                                <Input
                                    id="email"
                                    type="email"
                                    placeholder="m@example.com"
                                    required
                                    value={email}
                                    onChange={(e) => setEmail(e.target.value)}
                                />
                            </div>
                            <div className="grid gap-3">
                                <div>
                                    <div className="flex items-center">
                                        <label htmlFor="password">Password</label>
                                    </div>
                                    <Input
                                        id="password"
                                        type="password"
                                        required
                                        value={password}
                                        onChange={(e) => setPassword(e.target.value)}
                                    />

                                    <div className="flex items-center mt-4">
                                        <label htmlFor="confirmPassword">Confirm password</label>
                                    </div>
                                    <Input
                                        id="confirmPassword"
                                        type="password"
                                        required
                                        value={confirmPassword}
                                        onChange={(e) => setConfirmPassword(e.target.value)}
                                        className={` ${
                                            confirmPassword && !passwordsMatch ? 'border-red-500' : 'border-gray-300'
                                        }`}
                                    />
                                    {confirmPassword && !passwordsMatch && (
                                        <p className="text-red-500 text-sm mt-1">Passwords does not the same</p>
                                    )}
                                </div>
                            </div>
                            {error && <p className="text-red-500 text-sm">{error}</p>}
                            <Button type="submit" className="w-full text-white bg-[#2388FF] cursor-pointer">
                                Register
                            </Button>
                        </div>
                        <div className="text-center text-sm mt-4">
                            Already have an account?{" "}
                            <Link href="/login" className="underline underline-offset-4">
                                Login
                            </Link>
                        </div>
                    </form>
                </CardContent>
            </Card>
            <div className="text-muted-foreground *:[a]:hover:text-primary text-center text-xs text-balance *:[a]:underline *:[a]:underline-offset-4">
                By clicking continue, you agree to our{" "}
                <a href="#">Terms of Service</a> and <a href="#">Privacy Policy</a>.
            </div>
        </div>
    );
}
